[NOTE]
HOW TO USE

Pick any of the 12 slots below to edit. The notes are saved automatically.

The first line of the note will be shown as the title. Use it to organize your notes.

You may delete this text after reading, to use this slot as well.

Please refer to Help for more info and FAQs.
[/NOTE]

[NOTE]
<!DOCTYPE html>
<html>
  <head>
    <title>Parish AR World</title>
    <script src="https://aframe.io/releases/1.4.1/aframe.min.js"></script>
    <script src="https://cdn.rawgit.com/jeromeetienne/AR.js/2.2.1/aframe/build/aframe-ar-nft.js"></script>
    <script src="https://unpkg.com/aframe-gps-entity-place/dist/aframe-gps-entity-place.min.js"></script>
    <style>
      #parishSelector {
        position: absolute;
        top: 10px;
        left: 10px;
        z-index: 9999;
        font-size: 16px;
        padding: 5px;
        border-radius: 6px;
      }
    </style>
  </head>
  <body style="margin:0; overflow:hidden;">
    <!-- Dropdown Menu -->
    <select id="parishSelector">
      <option value="kingston.json">Kingston</option>
      <option value="stmary.json">St. Mary</option>
    </select>

    <!-- AR Scene -->
    <a-scene
      vr-mode-ui="enabled: false"
      embedded
      arjs="sourceType: webcam; gpsMinAccuracy: 100; debugUIEnabled: false;"
    >
      <a-camera gps-camera rotation-reader></a-camera>
    </a-scene>

    <script>
      async function loadParish(parishFile) {
        // Clear previous drops
        document.querySelectorAll("[gps-entity-place]").forEach(el => el.remove());

        // Fetch parish data
        const response = await fetch(parishFile);
        const data = await response.json();

        data.drops.forEach(drop => {
          const el = document.createElement("a-entity");

          if (drop.type === "text") {
            el.setAttribute("gps-entity-place", `latitude: ${drop.lat}; longitude: ${drop.lng}`);
            el.setAttribute("text", `value: ${drop.content}; color: red;`);
          }

          if (drop.type === "3d_model") {
            el.setAttribute("gps-entity-place", `latitude: ${drop.lat}; longitude: ${drop.lng}`);
            el.setAttribute("gltf-model", drop.asset);
            el.setAttribute("scale", "5 5 5");
          }

          document.querySelector("a-scene").appendChild(el);
        });
      }

      // Load default parish (Kingston)
      loadParish("kingston.json");

      // Dropdown listener
      document.getElementById("parishSelector").addEventListener("change", (e) => {
        loadParish(e.target.value);
      });
    </script>
  </body>
</html>
[/NOTE]

[NOTE]
{
  "parish": "Kingston",
  "drops": [
    {
      "lat": 17.968,
      "lng": -76.793,
      "type": "3d_model",
      "asset": "https://cdn.aframe.io/test-models/models/gltf/leeperrysmith/LeePerrySmith.glb"
    },
    {
      "lat": 17.972,
      "lng": -76.800,
      "type": "text",
      "content": "Welcome to Downtown Kingston!"
    }
  ]
}
[/NOTE]

[NOTE]
{
  "parish": "St. Mary",
  "drops": [
    {
      "lat": 18.383,
      "lng": -76.894,
      "type": "text",
      "content": "Welcome to St. Mary!"
    },
    {
      "lat": 18.400,
      "lng": -76.870,
      "type": "3d_model",
      "asset": "https://cdn.aframe.io/test-models/models/gltf/duck/duck.gltf"
    }
  ]
}
[/NOTE]

